<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.6 on linux)" generated="20200301 14:50:47.120" rpa="false">
<suite id="s1" name="testPutAndGetTests" source="/virtual/maramgan/a1-repos/a1-02-27-2020-07-17-58/testPutAndGetTests.robot">
<test id="s1-t1" name="TestAddActor200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:50:47.291" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:50:47.291" endtime="20200301 14:50:47.291"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:50:47.292" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:50:47.291" endtime="20200301 14:50:47.292"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Swetha Maramganty</arg>
<arg>actorId=nm1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:50:47.292" level="INFO">${params} = {'name': 'Swetha Maramganty', 'actorId': 'nm1'}</msg>
<status status="PASS" starttime="20200301 14:50:47.292" endtime="20200301 14:50:47.292"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addActor</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:50:47.292" level="INFO">PUT Request using : uri=/api/v1/addActor, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Swetha Maramganty", "actorId": "nm1"} 
json=None</msg>
<msg timestamp="20200301 14:50:47.342" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.292" endtime="20200301 14:50:47.342"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:50:47.342" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.342" endtime="20200301 14:50:47.342"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:50:47.290" endtime="20200301 14:50:47.342" critical="yes"></status>
</test>
<test id="s1-t2" name="Test2AddActor200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:50:47.343" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:50:47.343" endtime="20200301 14:50:47.343"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:50:47.343" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:50:47.343" endtime="20200301 14:50:47.343"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Arnold Rosenbloom</arg>
<arg>actorId=nm2</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:50:47.344" level="INFO">${params} = {'name': 'Arnold Rosenbloom', 'actorId': 'nm2'}</msg>
<status status="PASS" starttime="20200301 14:50:47.343" endtime="20200301 14:50:47.344"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addActor</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:50:47.344" level="INFO">PUT Request using : uri=/api/v1/addActor, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Arnold Rosenbloom", "actorId": "nm2"} 
json=None</msg>
<msg timestamp="20200301 14:50:47.358" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.344" endtime="20200301 14:50:47.358"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:50:47.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.358" endtime="20200301 14:50:47.358"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:50:47.342" endtime="20200301 14:50:47.359" critical="yes"></status>
</test>
<test id="s1-t3" name="TestAddKevinBacon200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:50:47.359" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:50:47.359" endtime="20200301 14:50:47.359"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:50:47.359" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:50:47.359" endtime="20200301 14:50:47.360"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Kevin Bacon</arg>
<arg>actorId=nm0000102</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:50:47.360" level="INFO">${params} = {'name': 'Kevin Bacon', 'actorId': 'nm0000102'}</msg>
<status status="PASS" starttime="20200301 14:50:47.360" endtime="20200301 14:50:47.360"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addActor</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:50:47.360" level="INFO">PUT Request using : uri=/api/v1/addActor, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Kevin Bacon", "actorId": "nm0000102"} 
json=None</msg>
<msg timestamp="20200301 14:50:47.373" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.360" endtime="20200301 14:50:47.373"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:50:47.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.373" endtime="20200301 14:50:47.374"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:50:47.359" endtime="20200301 14:50:47.374" critical="yes"></status>
</test>
<test id="s1-t4" name="Test3AddActor200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:50:47.374" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:50:47.374" endtime="20200301 14:50:47.375"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:50:47.375" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:50:47.375" endtime="20200301 14:50:47.375"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Ilir Dema</arg>
<arg>actorId=nm3</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:50:47.375" level="INFO">${params} = {'name': 'Ilir Dema', 'actorId': 'nm3'}</msg>
<status status="PASS" starttime="20200301 14:50:47.375" endtime="20200301 14:50:47.375"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addActor</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:50:47.375" level="INFO">PUT Request using : uri=/api/v1/addActor, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Ilir Dema", "actorId": "nm3"} 
json=None</msg>
<msg timestamp="20200301 14:50:47.391" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.375" endtime="20200301 14:50:47.391"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:50:47.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.391" endtime="20200301 14:50:47.391"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:50:47.374" endtime="20200301 14:50:47.391" critical="yes"></status>
</test>
<test id="s1-t5" name="TestAddActorKeepExistingNode400">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:50:47.392" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:50:47.392" endtime="20200301 14:50:47.392"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:50:47.392" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:50:47.392" endtime="20200301 14:50:47.392"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Shabaz Badshah</arg>
<arg>actorId=nm2</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:50:47.393" level="INFO">${params} = {'name': 'Shabaz Badshah', 'actorId': 'nm2'}</msg>
<status status="PASS" starttime="20200301 14:50:47.392" endtime="20200301 14:50:47.393"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addActor</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:50:47.393" level="INFO">PUT Request using : uri=/api/v1/addActor, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Shabaz Badshah", "actorId": "nm2"} 
json=None</msg>
<msg timestamp="20200301 14:50:47.397" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.393" endtime="20200301 14:50:47.397"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200301 14:50:47.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.397" endtime="20200301 14:50:47.398"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:50:47.391" endtime="20200301 14:50:47.398" critical="yes"></status>
</test>
<test id="s1-t6" name="TestAddActorBadBodyParam400">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:50:47.398" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:50:47.398" endtime="20200301 14:50:47.399"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:50:47.399" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:50:47.399" endtime="20200301 14:50:47.399"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Emma Stone</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:50:47.399" level="INFO">${params} = {'name': 'Emma Stone'}</msg>
<status status="PASS" starttime="20200301 14:50:47.399" endtime="20200301 14:50:47.399"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addActor</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:50:47.399" level="INFO">PUT Request using : uri=/api/v1/addActor, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Emma Stone"} 
json=None</msg>
<msg timestamp="20200301 14:50:47.425" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.399" endtime="20200301 14:50:47.425"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200301 14:50:47.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200301 14:50:47.426" level="FAIL">200 != 400</msg>
<status status="FAIL" starttime="20200301 14:50:47.425" endtime="20200301 14:50:47.426"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20200301 14:50:47.398" endtime="20200301 14:50:47.426" critical="yes">200 != 400</status>
</test>
<test id="s1-t7" name="TestAddMovie200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:50:47.427" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:50:47.427" endtime="20200301 14:50:47.427"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:50:47.427" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:50:47.427" endtime="20200301 14:50:47.427"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Up</arg>
<arg>movieId=tt1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:50:47.427" level="INFO">${params} = {'name': 'Up', 'movieId': 'tt1'}</msg>
<status status="PASS" starttime="20200301 14:50:47.427" endtime="20200301 14:50:47.427"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addMovie</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:50:47.428" level="INFO">PUT Request using : uri=/api/v1/addMovie, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Up", "movieId": "tt1"} 
json=None</msg>
<msg timestamp="20200301 14:50:47.443" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.428" endtime="20200301 14:50:47.443"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:50:47.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.443" endtime="20200301 14:50:47.443"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:50:47.426" endtime="20200301 14:50:47.443" critical="yes"></status>
</test>
<test id="s1-t8" name="Test2AddMovie200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:50:47.444" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:50:47.444" endtime="20200301 14:50:47.444"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:50:47.444" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:50:47.444" endtime="20200301 14:50:47.444"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Harry Potter</arg>
<arg>movieId=tt2</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:50:47.445" level="INFO">${params} = {'name': 'Harry Potter', 'movieId': 'tt2'}</msg>
<status status="PASS" starttime="20200301 14:50:47.444" endtime="20200301 14:50:47.445"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addMovie</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:50:47.445" level="INFO">PUT Request using : uri=/api/v1/addMovie, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Harry Potter", "movieId": "tt2"} 
json=None</msg>
<msg timestamp="20200301 14:50:47.457" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.445" endtime="20200301 14:50:47.457"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:50:47.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.457" endtime="20200301 14:50:47.458"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:50:47.443" endtime="20200301 14:50:47.458" critical="yes"></status>
</test>
<test id="s1-t9" name="Test3AddMovie200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:50:47.459" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:50:47.459" endtime="20200301 14:50:47.459"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:50:47.459" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:50:47.459" endtime="20200301 14:50:47.459"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Patriots Day</arg>
<arg>movieId=mv001</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:50:47.459" level="INFO">${params} = {'name': 'Patriots Day', 'movieId': 'mv001'}</msg>
<status status="PASS" starttime="20200301 14:50:47.459" endtime="20200301 14:50:47.459"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addMovie</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:50:47.460" level="INFO">PUT Request using : uri=/api/v1/addMovie, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Patriots Day", "movieId": "mv001"} 
json=None</msg>
<msg timestamp="20200301 14:50:47.471" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.459" endtime="20200301 14:50:47.471"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:50:47.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.472" endtime="20200301 14:50:47.472"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:50:47.458" endtime="20200301 14:50:47.472" critical="yes"></status>
</test>
<test id="s1-t10" name="Test4AddMovie200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:50:47.473" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:50:47.472" endtime="20200301 14:50:47.473"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:50:47.473" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:50:47.473" endtime="20200301 14:50:47.473"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=LOTR</arg>
<arg>movieId=mv002</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:50:47.473" level="INFO">${params} = {'name': 'LOTR', 'movieId': 'mv002'}</msg>
<status status="PASS" starttime="20200301 14:50:47.473" endtime="20200301 14:50:47.473"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addMovie</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:50:47.474" level="INFO">PUT Request using : uri=/api/v1/addMovie, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "LOTR", "movieId": "mv002"} 
json=None</msg>
<msg timestamp="20200301 14:50:47.485" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.473" endtime="20200301 14:50:47.485"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:50:47.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.486" endtime="20200301 14:50:47.486"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:50:47.472" endtime="20200301 14:50:47.486" critical="yes"></status>
</test>
<test id="s1-t11" name="Test5AddMovie200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:50:47.487" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:50:47.486" endtime="20200301 14:50:47.487"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:50:47.487" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:50:47.487" endtime="20200301 14:50:47.487"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=RV</arg>
<arg>movieId=mv003</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:50:47.487" level="INFO">${params} = {'name': 'RV', 'movieId': 'mv003'}</msg>
<status status="PASS" starttime="20200301 14:50:47.487" endtime="20200301 14:50:47.487"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addMovie</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:50:47.488" level="INFO">PUT Request using : uri=/api/v1/addMovie, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "RV", "movieId": "mv003"} 
json=None</msg>
<msg timestamp="20200301 14:50:47.500" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.488" endtime="20200301 14:50:47.500"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:50:47.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.500" endtime="20200301 14:50:47.501"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:50:47.486" endtime="20200301 14:50:47.501" critical="yes"></status>
</test>
<test id="s1-t12" name="TestAddMovieKeepExistingNode400">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:50:47.501" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:50:47.501" endtime="20200301 14:50:47.501"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:50:47.502" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:50:47.502" endtime="20200301 14:50:47.502"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Cinderalla</arg>
<arg>movieId=tt2</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:50:47.502" level="INFO">${params} = {'name': 'Cinderalla', 'movieId': 'tt2'}</msg>
<status status="PASS" starttime="20200301 14:50:47.502" endtime="20200301 14:50:47.502"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addMovie</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:50:47.502" level="INFO">PUT Request using : uri=/api/v1/addMovie, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Cinderalla", "movieId": "tt2"} 
json=None</msg>
<msg timestamp="20200301 14:50:47.506" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.502" endtime="20200301 14:50:47.506"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200301 14:50:47.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.506" endtime="20200301 14:50:47.506"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:50:47.501" endtime="20200301 14:50:47.507" critical="yes"></status>
</test>
<test id="s1-t13" name="TestAddMovieBadBodyParam400">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:50:47.507" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:50:47.507" endtime="20200301 14:50:47.508"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:50:47.508" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:50:47.508" endtime="20200301 14:50:47.508"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Graduation</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:50:47.508" level="INFO">${params} = {'name': 'Graduation'}</msg>
<status status="PASS" starttime="20200301 14:50:47.508" endtime="20200301 14:50:47.508"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addMovie</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:50:47.509" level="INFO">PUT Request using : uri=/api/v1/addMovie, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Graduation"} 
json=None</msg>
<msg timestamp="20200301 14:50:47.531" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.508" endtime="20200301 14:50:47.531"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200301 14:50:47.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200301 14:50:47.531" level="FAIL">200 != 400</msg>
<status status="FAIL" starttime="20200301 14:50:47.531" endtime="20200301 14:50:47.531"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20200301 14:50:47.507" endtime="20200301 14:50:47.531" critical="yes">200 != 400</status>
</test>
<test id="s1-t14" name="TestAddRelation200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:50:47.532" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:50:47.532" endtime="20200301 14:50:47.532"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:50:47.532" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:50:47.532" endtime="20200301 14:50:47.532"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm1</arg>
<arg>movieId=tt1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:50:47.533" level="INFO">${params} = {'actorId': 'nm1', 'movieId': 'tt1'}</msg>
<status status="PASS" starttime="20200301 14:50:47.532" endtime="20200301 14:50:47.533"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:50:47.533" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actorId": "nm1", "movieId": "tt1"} 
json=None</msg>
<msg timestamp="20200301 14:50:47.554" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.533" endtime="20200301 14:50:47.554"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:50:47.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.554" endtime="20200301 14:50:47.555"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:50:47.531" endtime="20200301 14:50:47.555" critical="yes"></status>
</test>
<test id="s1-t15" name="Test2AddRelation200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:50:47.555" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:50:47.555" endtime="20200301 14:50:47.555"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:50:47.556" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:50:47.556" endtime="20200301 14:50:47.556"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm1</arg>
<arg>movieId=mv002</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:50:47.556" level="INFO">${params} = {'actorId': 'nm1', 'movieId': 'mv002'}</msg>
<status status="PASS" starttime="20200301 14:50:47.556" endtime="20200301 14:50:47.556"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:50:47.556" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actorId": "nm1", "movieId": "mv002"} 
json=None</msg>
<msg timestamp="20200301 14:50:47.576" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.556" endtime="20200301 14:50:47.576"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:50:47.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.576" endtime="20200301 14:50:47.577"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:50:47.555" endtime="20200301 14:50:47.577" critical="yes"></status>
</test>
<test id="s1-t16" name="Test3AddRelation200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:50:47.578" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:50:47.577" endtime="20200301 14:50:47.578"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:50:47.578" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:50:47.578" endtime="20200301 14:50:47.578"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm3</arg>
<arg>movieId=tt2</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:50:47.578" level="INFO">${params} = {'actorId': 'nm3', 'movieId': 'tt2'}</msg>
<status status="PASS" starttime="20200301 14:50:47.578" endtime="20200301 14:50:47.578"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:50:47.579" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actorId": "nm3", "movieId": "tt2"} 
json=None</msg>
<msg timestamp="20200301 14:50:47.598" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.578" endtime="20200301 14:50:47.598"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:50:47.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.598" endtime="20200301 14:50:47.598"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:50:47.577" endtime="20200301 14:50:47.598" critical="yes"></status>
</test>
<test id="s1-t17" name="Test4AddRelation200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:50:47.599" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:50:47.599" endtime="20200301 14:50:47.599"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:50:47.599" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:50:47.599" endtime="20200301 14:50:47.599"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm3</arg>
<arg>movieId=tt1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:50:47.599" level="INFO">${params} = {'actorId': 'nm3', 'movieId': 'tt1'}</msg>
<status status="PASS" starttime="20200301 14:50:47.599" endtime="20200301 14:50:47.599"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:50:47.600" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actorId": "nm3", "movieId": "tt1"} 
json=None</msg>
<msg timestamp="20200301 14:50:47.618" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.600" endtime="20200301 14:50:47.618"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:50:47.618" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.618" endtime="20200301 14:50:47.618"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:50:47.598" endtime="20200301 14:50:47.619" critical="yes"></status>
</test>
<test id="s1-t18" name="Test5AddRelation200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:50:47.619" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:50:47.619" endtime="20200301 14:50:47.619"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:50:47.620" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:50:47.619" endtime="20200301 14:50:47.620"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm0000102</arg>
<arg>movieId=mv001</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:50:47.620" level="INFO">${params} = {'actorId': 'nm0000102', 'movieId': 'mv001'}</msg>
<status status="PASS" starttime="20200301 14:50:47.620" endtime="20200301 14:50:47.620"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:50:47.620" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actorId": "nm0000102", "movieId": "mv001"} 
json=None</msg>
<msg timestamp="20200301 14:50:47.639" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.620" endtime="20200301 14:50:47.639"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:50:47.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.639" endtime="20200301 14:50:47.639"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:50:47.619" endtime="20200301 14:50:47.639" critical="yes"></status>
</test>
<test id="s1-t19" name="Test6AddRelation200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:50:47.640" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:50:47.639" endtime="20200301 14:50:47.640"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:50:47.640" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:50:47.640" endtime="20200301 14:50:47.640"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm0000102</arg>
<arg>movieId=mv002</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:50:47.640" level="INFO">${params} = {'actorId': 'nm0000102', 'movieId': 'mv002'}</msg>
<status status="PASS" starttime="20200301 14:50:47.640" endtime="20200301 14:50:47.640"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:50:47.641" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actorId": "nm0000102", "movieId": "mv002"} 
json=None</msg>
<msg timestamp="20200301 14:50:47.660" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.640" endtime="20200301 14:50:47.660"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:50:47.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.660" endtime="20200301 14:50:47.660"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:50:47.639" endtime="20200301 14:50:47.660" critical="yes"></status>
</test>
<test id="s1-t20" name="Test7AddRelation200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:50:47.661" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:50:47.661" endtime="20200301 14:50:47.661"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:50:47.661" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:50:47.661" endtime="20200301 14:50:47.661"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm0000102</arg>
<arg>movieId=mv003</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:50:47.662" level="INFO">${params} = {'actorId': 'nm0000102', 'movieId': 'mv003'}</msg>
<status status="PASS" starttime="20200301 14:50:47.662" endtime="20200301 14:50:47.662"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:50:47.662" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actorId": "nm0000102", "movieId": "mv003"} 
json=None</msg>
<msg timestamp="20200301 14:50:47.682" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.662" endtime="20200301 14:50:47.682"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:50:47.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.682" endtime="20200301 14:50:47.682"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:50:47.660" endtime="20200301 14:50:47.682" critical="yes"></status>
</test>
<test id="s1-t21" name="TestAddRelationBadBodyParam400">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:50:47.683" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:50:47.683" endtime="20200301 14:50:47.683"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:50:47.683" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:50:47.683" endtime="20200301 14:50:47.683"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actor=nm0000102</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:50:47.684" level="INFO">${params} = {'actor': 'nm0000102'}</msg>
<status status="PASS" starttime="20200301 14:50:47.683" endtime="20200301 14:50:47.684"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:50:47.684" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actor": "nm0000102"} 
json=None</msg>
<msg timestamp="20200301 14:50:47.703" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.684" endtime="20200301 14:50:47.703"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200301 14:50:47.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200301 14:50:47.704" level="FAIL">200 != 400</msg>
<status status="FAIL" starttime="20200301 14:50:47.703" endtime="20200301 14:50:47.704"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20200301 14:50:47.683" endtime="20200301 14:50:47.704" critical="yes">200 != 400</status>
</test>
<test id="s1-t22" name="TestAddRelationMovieNoExist404">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:50:47.704" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:50:47.704" endtime="20200301 14:50:47.705"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:50:47.705" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:50:47.705" endtime="20200301 14:50:47.705"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm0000102</arg>
<arg>movieId=notexist</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:50:47.705" level="INFO">${params} = {'actorId': 'nm0000102', 'movieId': 'notexist'}</msg>
<status status="PASS" starttime="20200301 14:50:47.705" endtime="20200301 14:50:47.705"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:50:47.706" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actorId": "nm0000102", "movieId": "notexist"} 
json=None</msg>
<msg timestamp="20200301 14:50:47.721" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.705" endtime="20200301 14:50:47.721"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20200301 14:50:47.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200301 14:50:47.721" level="FAIL">200 != 404</msg>
<status status="FAIL" starttime="20200301 14:50:47.721" endtime="20200301 14:50:47.721"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20200301 14:50:47.704" endtime="20200301 14:50:47.721" critical="yes">200 != 404</status>
</test>
<test id="s1-t23" name="TestAddRelationActorNoExist404">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:50:47.722" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:50:47.722" endtime="20200301 14:50:47.722"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:50:47.722" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:50:47.722" endtime="20200301 14:50:47.722"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=notexist</arg>
<arg>movieId=tt1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:50:47.723" level="INFO">${params} = {'actorId': 'notexist', 'movieId': 'tt1'}</msg>
<status status="PASS" starttime="20200301 14:50:47.722" endtime="20200301 14:50:47.723"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:50:47.723" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actorId": "notexist", "movieId": "tt1"} 
json=None</msg>
<msg timestamp="20200301 14:50:47.738" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.723" endtime="20200301 14:50:47.738"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20200301 14:50:47.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200301 14:50:47.738" level="FAIL">200 != 404</msg>
<status status="FAIL" starttime="20200301 14:50:47.738" endtime="20200301 14:50:47.738"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20200301 14:50:47.721" endtime="20200301 14:50:47.739" critical="yes">200 != 404</status>
</test>
<test id="s1-t24" name="TestAddRelationBothNoExist404">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:50:47.739" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:50:47.739" endtime="20200301 14:50:47.739"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:50:47.740" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:50:47.739" endtime="20200301 14:50:47.740"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=notexist</arg>
<arg>movieId=notexist</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:50:47.740" level="INFO">${params} = {'actorId': 'notexist', 'movieId': 'notexist'}</msg>
<status status="PASS" starttime="20200301 14:50:47.740" endtime="20200301 14:50:47.740"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:50:47.740" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actorId": "notexist", "movieId": "notexist"} 
json=None</msg>
<msg timestamp="20200301 14:50:47.755" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.740" endtime="20200301 14:50:47.755"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20200301 14:50:47.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200301 14:50:47.756" level="FAIL">200 != 404</msg>
<status status="FAIL" starttime="20200301 14:50:47.755" endtime="20200301 14:50:47.756"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20200301 14:50:47.739" endtime="20200301 14:50:47.756" critical="yes">200 != 404</status>
</test>
<test id="s1-t25" name="TestGetActor200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:50:47.757" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:50:47.756" endtime="20200301 14:50:47.757"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200301 14:50:47.757" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:50:47.757" endtime="20200301 14:50:47.757"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:50:47.757" level="INFO">${params} = {'actorId': 'nm1'}</msg>
<status status="PASS" starttime="20200301 14:50:47.757" endtime="20200301 14:50:47.757"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/getActor</arg>
<arg>headers=${header}</arg>
<arg>json=${params}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:50:47.758" level="INFO">GET Request using : uri=/api/v1/getActor, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'nm1'}</msg>
<msg timestamp="20200301 14:50:47.778" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.757" endtime="20200301 14:50:47.778"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:50:47.779" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.778" endtime="20200301 14:50:47.779"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:50:47.756" endtime="20200301 14:50:47.779" critical="yes"></status>
</test>
<test id="s1-t26" name="TestGetActorExistsButNoMovies200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:50:47.779" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:50:47.779" endtime="20200301 14:50:47.779"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200301 14:50:47.780" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:50:47.780" endtime="20200301 14:50:47.780"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm2</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:50:47.780" level="INFO">${params} = {'actorId': 'nm2'}</msg>
<status status="PASS" starttime="20200301 14:50:47.780" endtime="20200301 14:50:47.780"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/getActor</arg>
<arg>headers=${header}</arg>
<arg>json=${params}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:50:47.780" level="INFO">GET Request using : uri=/api/v1/getActor, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'nm2'}</msg>
<msg timestamp="20200301 14:50:47.791" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.780" endtime="20200301 14:50:47.791"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:50:47.791" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.791" endtime="20200301 14:50:47.791"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:50:47.779" endtime="20200301 14:50:47.792" critical="yes"></status>
</test>
<test id="s1-t27" name="TestGetActorBadBodyParam400">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:50:47.792" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:50:47.792" endtime="20200301 14:50:47.792"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:50:47.793" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:50:47.792" endtime="20200301 14:50:47.793"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>act=notexist</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:50:47.793" level="INFO">${params} = {'act': 'notexist'}</msg>
<status status="PASS" starttime="20200301 14:50:47.793" endtime="20200301 14:50:47.793"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/getActor</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:50:47.793" level="INFO">GET Request using : uri=/api/v1/getActor, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'act': 'notexist'}</msg>
<msg timestamp="20200301 14:50:47.796" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.793" endtime="20200301 14:50:47.796"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200301 14:50:47.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.796" endtime="20200301 14:50:47.796"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:50:47.792" endtime="20200301 14:50:47.796" critical="yes"></status>
</test>
<test id="s1-t28" name="TestGetActorNoExist404">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:50:47.797" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:50:47.797" endtime="20200301 14:50:47.797"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:50:47.798" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:50:47.797" endtime="20200301 14:50:47.798"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=notexist</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:50:47.798" level="INFO">${params} = {'actorId': 'notexist'}</msg>
<status status="PASS" starttime="20200301 14:50:47.798" endtime="20200301 14:50:47.798"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/getActor</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:50:47.798" level="INFO">GET Request using : uri=/api/v1/getActor, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'notexist'}</msg>
<msg timestamp="20200301 14:50:47.809" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.798" endtime="20200301 14:50:47.809"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20200301 14:50:47.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.809" endtime="20200301 14:50:47.810"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:50:47.797" endtime="20200301 14:50:47.810" critical="yes"></status>
</test>
<test id="s1-t29" name="TestGetMovie200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:50:47.810" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:50:47.810" endtime="20200301 14:50:47.811"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:50:47.811" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:50:47.811" endtime="20200301 14:50:47.811"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>movieId=tt1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:50:47.811" level="INFO">${params} = {'movieId': 'tt1'}</msg>
<status status="PASS" starttime="20200301 14:50:47.811" endtime="20200301 14:50:47.811"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/getMovie</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:50:47.811" level="INFO">GET Request using : uri=/api/v1/getMovie, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'movieId': 'tt1'}</msg>
<msg timestamp="20200301 14:50:47.839" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.811" endtime="20200301 14:50:47.839"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:50:47.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.840" endtime="20200301 14:50:47.840"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:50:47.810" endtime="20200301 14:50:47.840" critical="yes"></status>
</test>
<test id="s1-t30" name="TestGetMovieNoExist404">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:50:47.841" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:50:47.841" endtime="20200301 14:50:47.841"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:50:47.841" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:50:47.841" endtime="20200301 14:50:47.841"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>movieId=notexist</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:50:47.842" level="INFO">${params} = {'movieId': 'notexist'}</msg>
<status status="PASS" starttime="20200301 14:50:47.841" endtime="20200301 14:50:47.842"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/getMovie</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:50:47.842" level="INFO">GET Request using : uri=/api/v1/getMovie, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'movieId': 'notexist'}</msg>
<msg timestamp="20200301 14:50:47.847" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.842" endtime="20200301 14:50:47.847"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20200301 14:50:47.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.847" endtime="20200301 14:50:47.847"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:50:47.840" endtime="20200301 14:50:47.847" critical="yes"></status>
</test>
<test id="s1-t31" name="TestGetMovieBadBodyParam400">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:50:47.848" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:50:47.848" endtime="20200301 14:50:47.848"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:50:47.848" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:50:47.848" endtime="20200301 14:50:47.848"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>movie=742053</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:50:47.849" level="INFO">${params} = {'movie': '742053'}</msg>
<status status="PASS" starttime="20200301 14:50:47.849" endtime="20200301 14:50:47.849"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/getMovie</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:50:47.849" level="INFO">GET Request using : uri=/api/v1/getMovie, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'movie': '742053'}</msg>
<msg timestamp="20200301 14:50:47.861" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.849" endtime="20200301 14:50:47.861"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200301 14:50:47.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.861" endtime="20200301 14:50:47.862"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:50:47.847" endtime="20200301 14:50:47.862" critical="yes"></status>
</test>
<test id="s1-t32" name="TestGetRelationship200True">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:50:47.863" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:50:47.862" endtime="20200301 14:50:47.863"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:50:47.863" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:50:47.863" endtime="20200301 14:50:47.863"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm0000102</arg>
<arg>movieId=mv001</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:50:47.863" level="INFO">${params} = {'actorId': 'nm0000102', 'movieId': 'mv001'}</msg>
<status status="PASS" starttime="20200301 14:50:47.863" endtime="20200301 14:50:47.863"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/hasRelationship</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:50:47.864" level="INFO">GET Request using : uri=/api/v1/hasRelationship, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'nm0000102', 'movieId': 'mv001'}</msg>
<msg timestamp="20200301 14:50:47.892" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.863" endtime="20200301 14:50:47.892"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:50:47.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.892" endtime="20200301 14:50:47.892"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>nm0000102</arg>
</arguments>
<status status="PASS" starttime="20200301 14:50:47.892" endtime="20200301 14:50:47.893"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>mv001</arg>
</arguments>
<status status="PASS" starttime="20200301 14:50:47.893" endtime="20200301 14:50:47.893"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>${true}</arg>
</arguments>
<msg timestamp="20200301 14:50:47.893" level="FAIL">Dictionary does not contain value 'True'.</msg>
<status status="FAIL" starttime="20200301 14:50:47.893" endtime="20200301 14:50:47.893"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20200301 14:50:47.862" endtime="20200301 14:50:47.894" critical="yes">Dictionary does not contain value 'True'.</status>
</test>
<test id="s1-t33" name="TestGetRelationshipIncompleteBodyParam400">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:50:47.894" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:50:47.894" endtime="20200301 14:50:47.894"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:50:47.895" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:50:47.894" endtime="20200301 14:50:47.895"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actor=9999</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:50:47.895" level="INFO">${params} = {'actor': '9999'}</msg>
<status status="PASS" starttime="20200301 14:50:47.895" endtime="20200301 14:50:47.895"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/hasRelationship</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:50:47.895" level="INFO">GET Request using : uri=/api/v1/hasRelationship, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actor': '9999'}</msg>
<msg timestamp="20200301 14:50:47.897" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.895" endtime="20200301 14:50:47.897"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200301 14:50:47.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.898" endtime="20200301 14:50:47.898"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:50:47.894" endtime="20200301 14:50:47.898" critical="yes"></status>
</test>
<test id="s1-t34" name="TestGetRelationshipBothNoExist404">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:50:47.899" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:50:47.898" endtime="20200301 14:50:47.899"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:50:47.900" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:50:47.899" endtime="20200301 14:50:47.900"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=notexist</arg>
<arg>movieId=notexist</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:50:47.900" level="INFO">${params} = {'actorId': 'notexist', 'movieId': 'notexist'}</msg>
<status status="PASS" starttime="20200301 14:50:47.900" endtime="20200301 14:50:47.900"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/hasRelationship</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:50:47.900" level="INFO">GET Request using : uri=/api/v1/hasRelationship, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'notexist', 'movieId': 'notexist'}</msg>
<msg timestamp="20200301 14:50:47.913" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.900" endtime="20200301 14:50:47.913"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20200301 14:50:47.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.913" endtime="20200301 14:50:47.914"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:50:47.898" endtime="20200301 14:50:47.914" critical="yes"></status>
</test>
<test id="s1-t35" name="TestGetRelationshipNoRel200False">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:50:47.914" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:50:47.914" endtime="20200301 14:50:47.915"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:50:47.915" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:50:47.915" endtime="20200301 14:50:47.915"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm2</arg>
<arg>movieId=tt2</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:50:47.915" level="INFO">${params} = {'actorId': 'nm2', 'movieId': 'tt2'}</msg>
<status status="PASS" starttime="20200301 14:50:47.915" endtime="20200301 14:50:47.915"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/hasRelationship</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:50:47.915" level="INFO">GET Request using : uri=/api/v1/hasRelationship, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'nm2', 'movieId': 'tt2'}</msg>
<msg timestamp="20200301 14:50:47.938" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.915" endtime="20200301 14:50:47.938"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:50:47.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.938" endtime="20200301 14:50:47.938"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>nm2</arg>
</arguments>
<status status="PASS" starttime="20200301 14:50:47.938" endtime="20200301 14:50:47.939"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>tt2</arg>
</arguments>
<status status="PASS" starttime="20200301 14:50:47.939" endtime="20200301 14:50:47.939"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>${false}</arg>
</arguments>
<msg timestamp="20200301 14:50:47.939" level="FAIL">Dictionary does not contain value 'False'.</msg>
<status status="FAIL" starttime="20200301 14:50:47.939" endtime="20200301 14:50:47.939"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20200301 14:50:47.914" endtime="20200301 14:50:47.940" critical="yes">Dictionary does not contain value 'False'.</status>
</test>
<test id="s1-t36" name="TestGetBaconNumber200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:50:47.940" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:50:47.940" endtime="20200301 14:50:47.940"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:50:47.941" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:50:47.940" endtime="20200301 14:50:47.941"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:50:47.941" level="INFO">${params} = {'actorId': 'nm1'}</msg>
<status status="PASS" starttime="20200301 14:50:47.941" endtime="20200301 14:50:47.941"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/computeBaconNumber</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:50:47.941" level="INFO">GET Request using : uri=/api/v1/computeBaconNumber, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'nm1'}</msg>
<msg timestamp="20200301 14:50:47.951" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.941" endtime="20200301 14:50:47.951"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:50:47.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:50:47.951" endtime="20200301 14:50:47.952"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20200301 14:50:47.952" endtime="20200301 14:50:47.952"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:50:47.940" endtime="20200301 14:50:47.952" critical="yes"></status>
</test>
<test id="s1-t37" name="Test2GetBaconNumberKevinBacon200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:50:47.953" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:50:47.953" endtime="20200301 14:50:47.953"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:50:47.953" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:50:47.953" endtime="20200301 14:50:47.953"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm0000102</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:50:47.953" level="INFO">${params} = {'actorId': 'nm0000102'}</msg>
<status status="PASS" starttime="20200301 14:50:47.953" endtime="20200301 14:50:47.953"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/computeBaconNumber</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:50:47.954" level="INFO">GET Request using : uri=/api/v1/computeBaconNumber, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'nm0000102'}</msg>
<msg timestamp="20200301 14:51:17.953" level="FAIL">Test timeout 30 seconds exceeded.</msg>
<status status="FAIL" starttime="20200301 14:50:47.954" endtime="20200301 14:51:17.953"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20200301 14:50:47.952" endtime="20200301 14:51:17.953" critical="yes">Test timeout 30 seconds exceeded.</status>
</test>
<test id="s1-t38" name="TestGetBaconNumberBadBodyParam400">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:51:17.954" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:51:17.954" endtime="20200301 14:51:17.954"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:51:17.955" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:51:17.954" endtime="20200301 14:51:17.955"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actor=1001</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:51:17.955" level="INFO">${params} = {'actor': '1001'}</msg>
<status status="PASS" starttime="20200301 14:51:17.955" endtime="20200301 14:51:17.955"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/computeBaconNumber</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:51:17.956" level="INFO">GET Request using : uri=/api/v1/computeBaconNumber, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actor': '1001'}</msg>
<msg timestamp="20200301 14:51:47.954" level="FAIL">Test timeout 30 seconds exceeded.</msg>
<status status="FAIL" starttime="20200301 14:51:17.955" endtime="20200301 14:51:47.954"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20200301 14:51:17.954" endtime="20200301 14:51:47.954" critical="yes">Test timeout 30 seconds exceeded.</status>
</test>
<test id="s1-t39" name="TestGetBaconNumberIdNoExist404">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:51:47.955" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:51:47.955" endtime="20200301 14:51:47.955"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:51:47.956" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:51:47.955" endtime="20200301 14:51:47.956"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=notexist</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:51:47.956" level="INFO">${params} = {'actorId': 'notexist'}</msg>
<status status="PASS" starttime="20200301 14:51:47.956" endtime="20200301 14:51:47.956"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/computeBaconNumber</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:51:47.956" level="INFO">GET Request using : uri=/api/v1/computeBaconNumber, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'notexist'}</msg>
<msg timestamp="20200301 14:52:17.955" level="FAIL">Test timeout 30 seconds exceeded.</msg>
<status status="FAIL" starttime="20200301 14:51:47.956" endtime="20200301 14:52:17.955"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20200301 14:51:47.954" endtime="20200301 14:52:17.955" critical="yes">Test timeout 30 seconds exceeded.</status>
</test>
<test id="s1-t40" name="TestGetBaconNumberPathNoExist200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:52:17.956" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:52:17.956" endtime="20200301 14:52:17.956"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:52:17.956" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:52:17.956" endtime="20200301 14:52:17.956"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm2</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:52:17.957" level="INFO">${params} = {'actorId': 'nm2'}</msg>
<status status="PASS" starttime="20200301 14:52:17.956" endtime="20200301 14:52:17.957"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/computeBaconNumber</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:52:17.957" level="INFO">GET Request using : uri=/api/v1/computeBaconNumber, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'nm2'}</msg>
<msg timestamp="20200301 14:52:47.955" level="FAIL">Test timeout 30 seconds exceeded.</msg>
<status status="FAIL" starttime="20200301 14:52:17.957" endtime="20200301 14:52:47.955"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20200301 14:52:17.955" endtime="20200301 14:52:47.956" critical="yes">Test timeout 30 seconds exceeded.</status>
</test>
<test id="s1-t41" name="TestBaconPath200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:52:47.957" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:52:47.956" endtime="20200301 14:52:47.957"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:52:47.957" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:52:47.957" endtime="20200301 14:52:47.957"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm3</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:52:47.958" level="INFO">${params} = {'actorId': 'nm3'}</msg>
<status status="PASS" starttime="20200301 14:52:47.957" endtime="20200301 14:52:47.958"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/computeBaconPath</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:52:47.958" level="INFO">GET Request using : uri=/api/v1/computeBaconPath, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'nm3'}</msg>
<msg timestamp="20200301 14:53:17.956" level="FAIL">Test timeout 30 seconds exceeded.</msg>
<status status="FAIL" starttime="20200301 14:52:47.958" endtime="20200301 14:53:17.957"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20200301 14:52:47.956" endtime="20200301 14:53:17.957" critical="yes">Test timeout 30 seconds exceeded.</status>
</test>
<test id="s1-t42" name="TestBaconPathBadBodyParam400">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:53:17.957" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:53:17.957" endtime="20200301 14:53:17.958"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:53:17.958" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:53:17.958" endtime="20200301 14:53:17.958"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actor=3333</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:53:17.958" level="INFO">${params} = {'actor': '3333'}</msg>
<status status="PASS" starttime="20200301 14:53:17.958" endtime="20200301 14:53:17.958"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/computeBaconPath</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:53:17.959" level="INFO">GET Request using : uri=/api/v1/computeBaconPath, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actor': '3333'}</msg>
<msg timestamp="20200301 14:53:47.957" level="FAIL">Test timeout 30 seconds exceeded.</msg>
<status status="FAIL" starttime="20200301 14:53:17.958" endtime="20200301 14:53:47.957"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20200301 14:53:17.957" endtime="20200301 14:53:47.957" critical="yes">Test timeout 30 seconds exceeded.</status>
</test>
<test id="s1-t43" name="TestBaconPathIdNoExist404">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:53:47.958" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:53:47.958" endtime="20200301 14:53:47.958"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:53:47.959" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:53:47.958" endtime="20200301 14:53:47.959"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=notexist</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:53:47.959" level="INFO">${params} = {'actorId': 'notexist'}</msg>
<status status="PASS" starttime="20200301 14:53:47.959" endtime="20200301 14:53:47.959"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/computeBaconPath</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:53:47.959" level="INFO">GET Request using : uri=/api/v1/computeBaconPath, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'notexist'}</msg>
<msg timestamp="20200301 14:54:17.957" level="FAIL">Test timeout 30 seconds exceeded.</msg>
<status status="FAIL" starttime="20200301 14:53:47.959" endtime="20200301 14:54:17.958"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20200301 14:53:47.958" endtime="20200301 14:54:17.958" critical="yes">Test timeout 30 seconds exceeded.</status>
</test>
<test id="s1-t44" name="TestBaconPathPathNoExist200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:54:17.959" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:54:17.958" endtime="20200301 14:54:17.959"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:54:17.959" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:54:17.959" endtime="20200301 14:54:17.959"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm2</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:54:17.959" level="INFO">${params} = {'actorId': 'nm2'}</msg>
<status status="PASS" starttime="20200301 14:54:17.959" endtime="20200301 14:54:17.959"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/computeBaconPath</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:54:17.960" level="INFO">GET Request using : uri=/api/v1/computeBaconPath, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'nm2'}</msg>
<msg timestamp="20200301 14:54:47.958" level="FAIL">Test timeout 30 seconds exceeded.</msg>
<status status="FAIL" starttime="20200301 14:54:17.960" endtime="20200301 14:54:47.958"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20200301 14:54:17.958" endtime="20200301 14:54:47.958" critical="yes">Test timeout 30 seconds exceeded.</status>
</test>
<status status="FAIL" starttime="20200301 14:50:47.121" endtime="20200301 14:54:47.959"></status>
</suite>
<statistics>
<total>
<stat pass="28" fail="16">Critical Tests</stat>
<stat pass="28" fail="16">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="28" fail="16" id="s1" name="testPutAndGetTests">testPutAndGetTests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
